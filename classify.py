import tensorflow as tf
import numpy as np
import keras
import glob
import time

# Parameters
model_path = 'saved_model/malware_detection_model_20k.keras'  # Replace with the path to your saved model
file = 'virus_samples/Virus.Win32.Expiro.virus'  # Replace with the path to the file you want to classify
max_length = 40000  # The length to which you truncate or pad the file


def preprocess_file(file_path, max_length):
    """Preprocess the binary file to a fixed length."""
    # Read the binary file
    with open(file_path, 'rb') as file:
        data = file.read()

    # Convert to numpy array and truncate or pad to max_length
    data = np.frombuffer(data, dtype=np.uint8)
    if len(data) > max_length:
        data = data[:max_length]
    else:
        data = np.pad(data, (0, max_length - len(data)), mode='constant')

    return data


def classify_file(model: keras.Model, file_data):
    """Use the trained model to classify the file."""
    # Reshape for the model input (batch size, length)
    file_data = file_data.reshape(1, -1)  # Add batch dimension
    start = time.monotonic()
    res =  model.predict(file_data, verbose=0)[0][0]
    print(time.monotonic() - start)
    return res


# Load the trained model
model = keras.models.load_model(model_path)

file_data = preprocess_file(file, max_length)


# Classify the file
predicted_class = classify_file(model, file_data)

# Output the result
print(f'{predicted_class}: {file}')
